clone_folder: c:\gopath\src\github.com\danstis\toggl-taskbar

environment:
  GOPATH: c:\gopath
  GO111MODULE: on

install:
  - choco install gitversion.portable -y
  - rm C:\Tools\GitVersion\GitVersion.exe
  - ps: |
      Remove-Item 'C:\go' -Recurse -Force -ErrorAction Ignore
      Remove-Item 'C:\go-x86' -Recurse -Force -ErrorAction Ignore

      Write-Host "Downloading..."
      $goDistPath = "$env:TEMP\go1.12.windows-386.zip"
      (New-Object Net.WebClient).DownloadFile('https://storage.googleapis.com/golang/go1.12.windows-386.zip', $goDistPath)

      Write-Host "Unpacking..."
      7z x $goDistPath -oC:\go1120-x86 | Out-Null
      [IO.Directory]::Move('C:\go1120-x86\go', 'C:\go112-x86')
      Remove-Item 'C:\go1120-x86' -Recurse -Force
      del $goDistPath

      Write-Host "Downloading..."
      $goDistPath = "$env:TEMP\go1.12.windows-amd64.zip"
      (New-Object Net.WebClient).DownloadFile('https://storage.googleapis.com/golang/go1.12.windows-amd64.zip', $goDistPath)

      Write-Host "Unpacking..."
      7z x $goDistPath -oC:\go1120-x64 | Out-Null
      [IO.Directory]::Move('C:\go1120-x64\go', 'C:\go112')
      Remove-Item 'C:\go1120-x64' -Recurse -Force
      del $goDistPath

      cmd /c mklink /J C:\go C:\go112
      cmd /c mklink /J C:\go-x86 C:\go112-x86
  - mkdir %GOPATH%\bin
  - set PATH=%GOPATH%\bin;c:\go\bin;%PATH%
  - go version

before_build:
  - gitversion /output buildserver
  - go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo
  - go get -d ./...

build_script:
  - ps: goversioninfo -64 -product-version="$env:GitVersion_SemVer" -ver-major="$env:GitVersion_Major" -ver-minor="$env:GitVersion_Minor" -ver-patch="$env:GitVersion_Patch"
  - ps: go build -ldflags "-H=windowsgui -X main.Version=$env:GitVersion_SemVer" github.com/danstis/toggl-taskbar

test_script:
  - go vet ./...

after_test:
  - ps: mkdir ".\package\"
  - ps: Copy-Item .\config.toml.default .\package\config.toml
  - ps: Copy-Item .\assets .\package\ -Recurse -Force
  - ps: Get-ChildItem -Path .\* -Include "*.exe","*.md","LICENSE" -Force | Copy-Item -Destination .\package
  - 7z a toggl-taskbar.zip %APPVEYOR_BUILD_FOLDER%\package\*

# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

artifacts:
  - path: toggl-taskbar.zip
    name: toggl-taskbar

deploy:
  release: v$(GitVersion_SemVer)
  provider: GitHub
  auth_token:
    secure: W3T3l8qHO8zyWmXx72+sdErNqCEfFVa/MEu4FAq8EUiI2SrLeQhTE8Ff4ts5avlO # GitHub Token
  artifact: toggl-taskbar
  force_update: true
  draft: false
  prerelease: false
  on:
    branch: master
    appveyor_repo_tag: true # deploy on tag push only
