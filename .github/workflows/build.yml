name: Build and Release

on:
  push:
    branches:
      - master
      - main
      - beta
      - "feature/*"
      - "fix/*"
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest
  build:
    name: Build
    runs-on: windows-2019
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.9

      # - name: Get dependencies
      #   run: go get github.com/josephspurrier/goversioninfo/cmd/goversioninfo

      # - name: Build
      #   run: |
      #     goversioninfo -64 -product-version="${{ steps.gitversion.outputs.semver }}" -ver-major="${{ steps.gitversion.outputs.major }}" -ver-minor="${{ steps.gitversion.outputs.minor }}" -ver-patch="${{ steps.gitversion.outputs.patch }}"
      #     go build -ldflags "-H=windowsgui -X main.Version=${{ steps.gitversion.outputs.semver }}" github.com/danstis/toggl-taskbar

      # - name: Package build
      #   run: |
      #     mkdir ./package
      #     Copy-Item .\config.toml.default .\package\config.toml
      #     Copy-Item .\assets .\package\ -Recurse -Force
      #     Get-ChildItem -Path .\* -Include "*.exe","*.md","LICENSE" -Force | Copy-Item -Destination .\package

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2 # https://github.com/marketplace/actions/goreleaser-action
        # if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' }}
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
